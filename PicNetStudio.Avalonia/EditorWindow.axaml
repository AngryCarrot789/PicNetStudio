<tc:WindowEx x:Class="PicNetStudio.Avalonia.EditorWindow"
             xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:sc="clr-namespace:PicNetStudio.Avalonia.Shortcuts.Avalonia"
             xmlns:c="clr-namespace:PicNetStudio.Avalonia.PicNet.Controls"
             xmlns:tbc="clr-namespace:PicNetStudio.Avalonia.PicNet.Toolbars.Controls"
             xmlns:pec="clr-namespace:PicNetStudio.Avalonia.PicNet.PropertyEditing.Controls"
             xmlns:tc="clr-namespace:PicNetStudio.Avalonia.Themes.Controls"
             xmlns:cmdu="clr-namespace:PicNetStudio.Avalonia.CommandSystem.Usages"
             xmlns:ams="clr-namespace:PicNetStudio.Avalonia.AdvancedMenuService"
             xmlns:settings="clr-namespace:PicNetStudio.Avalonia.PicNet.Tools.Settings"
             xmlns:cmd="clr-namespace:PicNetStudio.Avalonia.PicNet"
             xmlns:commandUsages="clr-namespace:PicNetStudio.Avalonia.PicNet.CommandUsages"
             xmlns:lc="clr-namespace:PicNetStudio.Avalonia.PicNet.Layers"
             mc:Ignorable="d" Width="1280" Height="720"
             Title="PicNet Studio"
             sc:UIInputManager.FocusPath="Application/EditorWindow"
             Background="{DynamicResource PanelBackground1}"
             TitleBarBrush="{DynamicResource ABrush.Tone7.Background.Static}"
             BorderBrush="{DynamicResource ABrush.Tone1.Border.Static}" BorderThickness="1"
             FontFamily="{StaticResource FontOxanium}">
    <Grid RowDefinitions="Auto,1,*">
        <Grid Grid.Row="2" ColumnDefinitions="40,*,0,300" RowDefinitions="30,*">
            <c:CanvasViewPortControl x:Name="PART_Canvas" Grid.Column="1" Grid.Row="1"
                                    HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                    Background="Transparent" BorderBrush="{DynamicResource ABrush.Tone1.Border.Static}"
                                    Focusable="True" BorderThickness="1,1,1,0"
                                    sc:UIInputManager.FocusPath="Application/EditorWindow/Canvas">
                <c:CanvasViewPortControl.Styles>
                    <Style Selector="c|CanvasViewPortControl[IsFocused=false]">
                        <Setter Property="BorderBrush" Value="{DynamicResource PanelBorderBrush}"/>
                    </Style>
                    <Style Selector="c|CanvasViewPortControl[IsFocused=true]">
                        <Setter Property="BorderBrush" Value="DodgerBlue"/>
                    </Style>
                </c:CanvasViewPortControl.Styles>
            </c:CanvasViewPortControl>
            <Border Grid.Column="0" Grid.Row="1" Background="{DynamicResource PanelBackground3}">
                <StackPanel>
                    <tbc:ToolBarItemListBox x:Name="PART_ToolBar" Margin="2,0" Padding="0"/>
                    <Separator/>
                    <Canvas Margin="4,2">
                        <Canvas.Resources>
                            <ControlTheme x:Key="ColourPickerButtonTheme" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border x:Name="PART_Border" Background="{TemplateBinding Background}" 
                                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                                    BorderThickness="{TemplateBinding BorderThickness}"/>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style Selector="^:pointerover /template/ Border#PART_Border">
                                    <Setter Property="BorderBrush" Value="Orange"/>
                                </Style>
                            </ControlTheme>
                        </Canvas.Resources>
                        <Button x:Name="PART_SecondaryColourButton" Theme="{StaticResource ColourPickerButtonTheme}" Canvas.Left="10" Canvas.Top="10" Width="20" Height="20"/>
                        <Button x:Name="PART_PrimaryColourButton" Theme="{StaticResource ColourPickerButtonTheme}" Width="20" Height="20"/>
                    </Canvas>
                </StackPanel>
            </Border>
            <Border Grid.Column="3" Grid.Row="1" Background="{DynamicResource PanelBackground3}">
                <Grid RowDefinitions="*,1,*">
                    <DockPanel Grid.Row="0" sc:UIInputManager.FocusPath="Application/EditorWindow/LayerTree">
                        <Border DockPanel.Dock="Top" Background="{DynamicResource ABrush.Tone5.Background.Static}" BorderBrush="{DynamicResource ABrush.Tone1.Border.Static}" BorderThickness="0,1,0,1">
                            <ToolTip.Tip>
                                <TextBlock>
                                    <Run Text="This is the layer tree. Each layer is rendered bottom to top"/>
                                    <LineBreak/>
                                    <Run Text="Composition (folder) layers treat blending modes of child layers relative to that said composition layer, so advanced blending composition can be used"/>
                                </TextBlock>
                            </ToolTip.Tip>
                            <DockPanel LastChildFill="False">
                                <TextBlock Text="Layers" Padding="8,4" HorizontalAlignment="Left" DockPanel.Dock="Left"/>
                                <TextBlock Text="?" DockPanel.Dock="Right" Padding="8,0" VerticalAlignment="Center"/>
                                <ToggleButton DockPanel.Dock="Right" Padding="8,0" Background="Transparent" BorderThickness="0"
                                              IsChecked="{Binding ElementName=PART_LayerTreeControl, Path=ViewMode, Mode=OneWay, Converter={x:Static lc:LayerViewModelToIsToggleConverter.Instance}, ConverterParameter={x:Static lc:LayerTreeViewMode.Compact}}"
                                              Click="SetViewModeClick" Tag="{x:Static lc:LayerTreeViewMode.Compact}">
                                    <ToolTip.Tip>
                                        <TextBlock>
                                            <Run Text="Compact view mode" FontSize="16" TextDecorations="Underline"/>
                                            <LineBreak/>
                                            <Run Text="This shows layers as thin tree nodes, for easy overview of a project"/>
                                        </TextBlock>
                                    </ToolTip.Tip>
                                    <StackPanel Spacing="2" UseLayoutRounding="False">
                                        <Rectangle Width="5" Height="1" Fill="{DynamicResource ABrush.Glyph.Static}" UseLayoutRounding="False"/>
                                        <Rectangle Width="5" Height="1" Fill="{DynamicResource ABrush.Glyph.Static}" UseLayoutRounding="False"/>
                                        <Rectangle Width="5" Height="1" Fill="{DynamicResource ABrush.Glyph.Static}" UseLayoutRounding="False"/>
                                        <Rectangle Width="5" Height="1" Fill="{DynamicResource ABrush.Glyph.Static}" UseLayoutRounding="False"/>
                                    </StackPanel>
                                </ToggleButton>
                                <ToggleButton DockPanel.Dock="Right" Padding="8,0" Background="Transparent" BorderThickness="0"
                                              IsChecked="{Binding ElementName=PART_LayerTreeControl, Path=ViewMode, Mode=OneWay, Converter={x:Static lc:LayerViewModelToIsToggleConverter.Instance}, ConverterParameter={x:Static lc:LayerTreeViewMode.Enlarged}}"
                                              Click="SetViewModeClick" Tag="{x:Static lc:LayerTreeViewMode.Enlarged}">
                                    <ToolTip.Tip>
                                        <TextBlock>
                                            <Run Text="Enlarged view mode" FontSize="16" TextDecorations="Underline"/>
                                            <LineBreak/>
                                            <Run Text="This shows layers as fairly large tree nodes and also shows a preview of the layer"/>
                                        </TextBlock>
                                    </ToolTip.Tip>
                                    <StackPanel Spacing="3" UseLayoutRounding="False">
                                        <Rectangle Width="5" Height="4" Fill="{DynamicResource ABrush.Glyph.Static}" UseLayoutRounding="False"/>
                                        <Rectangle Width="5" Height="4" Fill="{DynamicResource ABrush.Glyph.Static}" UseLayoutRounding="False"/>
                                    </StackPanel>
                                </ToggleButton>
                            </DockPanel>
                        </Border>
                        <Border DockPanel.Dock="Bottom" BorderBrush="{DynamicResource ABrush.Tone3.Border.Static}" BorderThickness="0,1,0,0" Height="24">
                            <StackPanel Orientation="Horizontal">
                                <Button Content="+" Background="Transparent" BorderThickness="0" Width="24"
                                        ToolTip.Tip="Add a new layer above the selected layer"
                                        cmdu:CommandUsageManager.UsageClassType="{x:Type commandUsages:CreateNewRasterLayerCommandUsage}"/>
                                <Border Background="{DynamicResource ABrush.Tone3.Border.Static}" Width="1"/>
                                <Button Content="+T" Background="Transparent" BorderThickness="0" Width="24"
                                        ToolTip.Tip="Add a new text layer above the selected layer"
                                        cmdu:CommandUsageManager.UsageClassType="{x:Type commandUsages:CreateNewTextLayerCommandUsage}"/>
                                <Border Background="{DynamicResource ABrush.Tone3.Border.Static}" Width="1"/>
                                <Button Content="-" Background="Transparent" BorderThickness="0" Width="24"
                                        ToolTip.Tip="Delete the selected layer(s)"
                                        cmdu:CommandUsageManager.UsageClassType="{x:Type commandUsages:DeleteSelectedLayersCommandUsage}"/>
                                <Border Background="{DynamicResource ABrush.Tone3.Border.Static}" Width="1"/>
                                <Button Content="COMP" Background="Transparent" BorderThickness="0" Width="48"
                                        ToolTip.Tip="Places your selection into a composition layer (aka a group/folder)"
                                        cmdu:CommandUsageManager.UsageClassType="{x:Type commandUsages:GroupSelectionIntoCompositionCommandUsage}"/>
                                <Border Background="{DynamicResource ABrush.Tone3.Border.Static}" Width="1"/>
                                <Button Content="Merge" Background="Transparent" BorderThickness="0" Width="48"
                                        ToolTip.Tip="Places your selection into a composition layer (aka a group/folder)"
                                        cmdu:CommandUsageManager.UsageClassType="{x:Type commandUsages:MergeSelectionIntoRasterCommandUsage}"/>
                                <Border Background="{DynamicResource ABrush.Tone3.Border.Static}" Width="1"/>
                            </StackPanel>
                        </Border>
                        <!-- Compact by default -->
                        <lc:LayerTreeControl x:Name="PART_LayerTreeControl"
                                             Background="Transparent"
                                             BorderBrush="Transparent"
                                             BorderThickness="0"
                                             ViewMode="Enlarged"/>
                    </DockPanel>

                    <DockPanel Grid.Row="2">
                        <TabControl BorderBrush="{DynamicResource PanelBorderBrush}" BorderThickness="0,1,0,0">
                            <TabItem Header="Property Editor">
                                <Border Background="{DynamicResource PanelBackground3}"
                                        BorderThickness="0">
                                    <pec:PropertyEditorControl x:Name="ThePropertyEditor" Focusable="True" Background="Transparent"/>
                                </Border>
                            </TabItem>
                            <TabItem Header="Colour Picker">
                                <ColorSpectrum x:Name="PART_ColourPicker" ColorChanged="OnColourPickerColourChanged"/>
                            </TabItem>
                        </TabControl>
                    </DockPanel>
                    <GridSplitter Grid.Row="1" Margin="0,-3" Background="Transparent"/>
                </Grid>
            </Border>
            <GridSplitter Grid.Column="2" Grid.Row="1" Background="Transparent" Margin="-2,0,-6,0" Cursor="SizeWestEast"/>
            <Border Grid.Column="0" Grid.ColumnSpan="4" Grid.Row="0" Background="{DynamicResource PanelBackground3}">
                <settings:ToolSettingContainerControl x:Name="PART_ToolSettingsContainer" Margin="5,0"/>
            </Border>
        </Grid>
        <Border Background="{DynamicResource ABrush.Tone1.Border.Static}" Grid.Row="1"/>
        <Menu Grid.Row="0" Background="{DynamicResource ABrush.Tone7.Background.Static}" Padding="0,3">
            <MenuItem Header="File">
                <ams:CommandMenuItem Header="Open" CommandId="command.generic.OpenDocument"/>
                <ams:CommandMenuItem Header="Save" CommandId="command.generic.SaveDocument"/>
                <Separator/>
                <ams:CommandMenuItem Header="Export" CommandId="command.generic.ExportImage"/>
                <ams:CommandMenuItem Header="Export to Clipboard" CommandId="command.generic.ExportCanvasToClipboard"/>
            </MenuItem>
            <MenuItem Header="Edit"/>
        </Menu>
    </Grid>
</tc:WindowEx>